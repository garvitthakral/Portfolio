/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 react2.glb --draco 
*/

import React, { useRef, useEffect } from "react";
import { useGLTF, Center } from "@react-three/drei";
import gsap from "gsap";

const React3D = (props) => {
  const { nodes, materials } = useGLTF("/public/react2.glb");

  const groupRef = useRef();

  useEffect(() => {
    if (!groupRef.current) return;

    groupRef.current.rotation.set(Math.PI / 2, 0, Math.PI * 2);
    // Animate the rotation on the Y axis infinitely
    gsap.to(groupRef.current.rotation, {
      z: "+=6.283", // 2 * Math.PI radians = full rotation
      duration: 9,
      repeat: -1,
      ease: "linear",
    });
  }, []);

  return (
    <group position={[4, 0, -1]}>
      <Center>
        <group
          {...props}
          dispose={null}
          ref={(el) => {
            groupRef.current = el;
          }}
        >
          <group scale={0.5}>
            <mesh
              geometry={nodes.back.geometry}
              material={materials["back.001"]}
            />
            <mesh
              geometry={nodes.LOGO.geometry}
              material={materials["logo.001"]}
              position={[-0.003, 0.648, 0.006]}
            />
          </group>
        </group>
      </Center>
    </group>
  );
};

export default React3D;

useGLTF.preload("/public/react2.glb");
